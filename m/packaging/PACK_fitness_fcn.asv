function fitness = PACK_fitness_fcn(x,hObject)
%% PACK_fitness_fcn_multi.m
% This function takes as an input a vector [1 x N_INSTR] called x which
% contains the assignment of instruments to satellites following the format
% below:
% x = [Sat_of_instr1 Sat_of_instr2 ... Sat_of_instrN_INSTR]
% where Sat_of_instri are all integers between 1 and N_INSTR.
%
% The outputs are the 4 different FOMs: cost, risk, schedule and performance.
%
% This function calls the functions in the Matlab model EO_Evaluate, etc.
% In order to do that it creates a structure that can be used by the model.

      
    
% We round the vector so that the numbers are all integers
% x = round(x);
% x(x<1) = 1;
fid = fopen('control_matlab.txt','r');
s = fscanf(fid,'%s\n');
fclose(fid);
if strcmp(s(end-3:end),'stop')
    fprintf('Stopping...\n');
    keyboard();
end 

handles = guidata(hObject);
x2 = PACK_fix(x);
set(handles.rand_arch,'String',num2str(x2));
RBES_Plot_Pack_arch(handles.axes4,x2,handles.params);guidata(hObject, handles);pause(0.33);
    
arch.packaging = x2;
fprintf('Evaluating arch: ');
fprintf('%d ',x2);
fprintf('...');
[science,total_cost,nsat] = PACK_evaluate_architecture(handles.r,handles.params,arch);
if nsat<max(x2) % case where one sat was too big, not accounted for by RBES, forbidden becasue packaging, not selection
    total_cost = 4000;% this is the cost of a regular arch with all instruments
end
fitness = -science/0.1 + total_cost/4000;
n = length(handles.NUM_archs);
handles.NUM_archs{n+1} = x;
handles.NUM_sciences(n+1) = science;
handles.NUM_costs(n+1) = total_cost;
mx = num2str(round(java.lang.Runtime.getRuntime.maxMemory/1024/1024));
tot = num2str(round(java.lang.Runtime.getRuntime.totalMemory/1024/1024));
free =num2str(round(java.lang.Runtime.getRuntime.freeMemory/1024/1024));
if tot + margin > mx
    save('intermediate_GA_results.mat','archs','sciences','costs');
    keyboard();
end
% mem_str = ['max=' mx ',tot=' tot ',free=' free];
% set(handles.java_mem,'String',mem_str);
% guidata(hObject, handles);
% archs = handles.NUM_archs;
% sciences = handles.NUM_sciences;
% costs = handles.NUM_costs;
% 
% save('intermediate_GA_results.mat','archs','sciences','costs');
fprintf('science = %f cost = %f, unfitness = %f\n',science,total_cost/1000,fitness);
return
