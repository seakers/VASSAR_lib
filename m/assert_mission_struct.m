function [] = assert_mission_struct(mission)
r = global_jess_engine();
if iscell(mission.instrument_list)
    instr_list_str = StringArraytoStringWithSpaces(mission.instrument_list);
else
    instr_list_str = mission.instrument_list;
end

call = ['(assert (MANIFEST::Mission (Name ' char(mission.name) ')' ...
        ' (instruments ' instr_list_str ')' ...
        ' (lifetime ' num2str(mission.lifetime) ')' ...
        ' (launch-date ' num2str(mission.launch_date) ')' ...
        ' (select-orbit yes)'];

if isempty(mission.orbit)
    call = [call ' (select-orbit yes)'];
else 
    call = [call ' (mission-architecture ' char(mission.architecture) ')' ...
        ' (num-of-planes# ' num2str(mission.orbit.nplanes) ')' ...
        ' (num-of-sats-per-plane# ' num2str(mission.orbit.nsats_per_plane) ')' ...
        ' (orbit-type ' char(mission.orbit.type) ')' ...
        ' (orbit-altitude# ' num2str(mission.orbit.altitude) ')' ...
        ' (orbit-RAAN ' char(mission.orbit.raan) ')' ...
        ' (orbit-inclination ' char(mission.orbit.inclination) ')' ...
        ' (select-orbit no) '];
end

if ~isempty(mission.partnership)
    call = [call ' (partnership-type (create$ ' num2str(de2bi(mission.partnership)) ' ))'];
else

end

call = [call '))'];% close Mission and assert
r.eval(call);