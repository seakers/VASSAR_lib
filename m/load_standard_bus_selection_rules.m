function load_standard_bus_selection_rules
%% load_standard_bus_selection_rules.m
global params
r = global_jess_engine();
r.eval(['(bind ?standard_bus_selection_rules_clp "' params.standard_bus_selection_rules_clp '")']);
r.eval('(batch ?standard_bus_selection_rules_clp)');

if strcmp(params.CASE_STUDY,'EOS')
    jess defrule BUS-SELECTION::assert-all-possible-buses ...
    (declare (salience 20)) ...
    ?orig <- (MANIFEST::Mission (standard-bus nil)) ...
    => ...
    (foreach ?bus (create$ T330-class BCP2000-class Pegastar-class dedicated-class) ...
        (duplicate ?orig (standard-bus ?bus) (bus-cost# (get-bus-cost ?bus)) ...
            ) ...
        ) ...
    (retract ?orig);
else
    jess defrule BUS-SELECTION::assert-all-possible-buses ...
    (declare (salience 20)) ...
    ?orig <- (MANIFEST::Mission (standard-bus nil)) ...
    => ...
    (foreach ?bus (create$ T330-class BCP2000-class Pegastar-class) ...
        (duplicate ?orig (standard-bus ?bus) (bus-cost# (get-bus-cost ?bus)) ...
            ) ...
        ) ...
    (retract ?orig);
end

end